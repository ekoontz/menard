AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Menard lambda functions using using the `holy-lambda` micro library"
Parameters:
  Runtime:
    Type: String
    Default: provided
  Timeout:
    Type: Number
    Default: 40
  MemorySize:
    Type: Number
    Default: 2000
  BucketName:
    Type: String
  ObjectKey:
    Type: String
Globals:
  Function:
    Runtime: !Ref 'Runtime'
    Timeout: !Ref 'Timeout'
    MemorySize: !Ref 'MemorySize'
Resources:
  Generate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.Generate
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: Generate
      Events:
        Event:
          Type: Api
          Properties:
            Path: /generate
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  GenerateEN:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.GenerateEN
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: GenerateEN
      Events:
        Event:
          Type: Api
          Properties:
            Path: /generate/en
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  GenerateWithAlts:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.GenerateWithAlts
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: GenerateWithAlts
      Events:
        Event:
          Type: Api
          Properties:
            Path: /generate-with-alts
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  GrammarEN:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.GrammarEN
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: GrammarEN
      Events:
        Event:
          Type: Api
          Properties:
            Path: /grammar/en
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  GrammarNL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.GrammarNL
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: GrammarNL
      Events:
        Event:
          Type: Api
          Properties:
            Path: /grammar/nl
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  MorphologyEN:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.MorphologyEN
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: MorphologyEN
      Events:
        Event:
          Type: Api
          Properties:
            Path: /morphology/en
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  MorphologyNL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.MorphologyNL
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: MorphologyNL
      Events:
        Event:
          Type: Api
          Properties:
            Path: /morphology/nl
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  Parse:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.Parse
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: Parse
      Events:
       Event:
          Type: Api
          Properties:
            Path: /parse
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  ParseENStart:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.ParseENStart
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: ParseENStart
      Events:
       Event:
          Type: Api
          Properties:
            Path: /parse-start/en
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  ParseNLStart:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.ParseNLStart
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: ParseNLStart
      Events:
       Event:
          Type: Api
          Properties:
            Path: /parse-start/nl
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  RuleEN:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.RuleEN
      CodeUri:
        Key: !Ref 'ObjectKey'
        Bucket: !Ref 'BucketName'
      FunctionName: RuleEN
      Events:
        Event:
          Type: Api
            Properties:
            Path: /rule/en
            Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
  RuleNL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: menard.lambda.def.RuleNL
      CodeUri:
        Key: !Ref 'ObjectKey'
	Bucket: !Ref 'BucketName'
      FunctionName: RuleNL
      Events:
        Event:
         Type: Api
           Properties:
           Path: /rule/nl
           Method: get
      AutoPublishAlias: live
      DeploymentPreference:
          Type: AllAtOnce
