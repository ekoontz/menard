[;; inflection: present
 {:g [#"^(.*ay)$"   "$1s"] ;; play  -> plays
  :p [#"^(.*ay)s$"  "$1y"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}

 {:g [#"^(.*)y$"   "$1ies"] ;; try  -> tries
  :p [#"^(.*)ies$" "$1y"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}
 
 {:g [#"^(.*)o$"   "$1oes"] ;; go  -> goes
  :p [#"^(.*)oes$" "$1o"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}

 {:g [#"^(.*e)$"  "$1s"] ;; give -> gives
  :p [#"^(.*e)s$" "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}

 {:g [#"^(.*[cs]h)$"   "$1es"] ;; teach -> teaches, finish -> finishes
  :p [#"^(.*[cs]h)es$" "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}

 {:g [#"^(.*ss)$"   "$1es"] ;; guess -> guesses
  :p [#"^(.*ss)es$" "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}

 {:g [#"^(.*[^y])$"  "$1s"] ;; sleep -> sleeps
  :p [#"^(.*[^e])s$" "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :sing}}}

 {:g [#"^(.*)$"  "$1"] 
  :p [#"^(.*)$"  "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :1st
            :number :sing}}}

 {:g [#"^(.*)$"  "$1"] 
  :p [#"^(.*)$"  "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :2nd
            :number :sing}}}

 {:g [#"^(.*)$"  "$1"] 
  :p [#"^(.*)$"  "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :1st
            :number :plur}}}

 {:g [#"^(.*)$"  "$1"] 
  :p [#"^(.*)$"  "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :2nd
            :number :plur}}}

 {:g [#"^(.*)$"  "$1"] 
  :p [#"^(.*)$"  "$1"] 
  :u {:cat :verb
      :infl :present
      :agr {:person :3rd
            :number :plur}}}

 ;; inflection: past-simple
 ;; bake/baked
 {:g [#"^(.*)e$" "$1ed"]
  :p [#"^(.*e)d$" "$1"]
  :u {:cat :verb
      :infl :past-simple}}

 ;; try/tried (but not play/played)
 {:g [#"^(.*[^aeiou])y$" "$1ied"]
  :p [#"^(.*[^aeiou])ied$" "$1y"]
  :u {:cat :verb
      :infl :past-simple}}

 ;; explain/explained,ruin/ruined, coin/coined/
 {:g [#"^(.*[aou]in)$"   "$1ed"]
  :p [#"^(.*[aou]in)ed$" "$1"]
  :u {:cat :verb
      :infl :past-simple}}

 ;; abandon/abandoned
 {:g [#"^(.*[o])([n])$"  "$1$2ed"]
  :p [#"^(.*[o][n])ed$" "$1"]
  :u {:cat :verb
      :infl :past-simple}}
 
 ;; prohibit/prohibited
 {:g [#"^(.*bit)$"   "$1ed"]
  :p [#"^(.*bit)ed$" "$1"]
  :u {:cat :verb
      :infl :past-simple}}

 ;; stop/stopped,step/stepped
 ;; (but not: probit/prohibited)
 {:g [#"^(.*[eiou])([bgnpst])$"           "$1$2$2ed"]
  :p [#"^(.*[eiou][bgnpst])([bgnpst])ed$"  "$1"]
  :u {:cat :verb
      :infl :past-simple}}

 {:g [#"^(.*op)$"     "$1ed"]
  :p [#"^(.*op)ed$"   "$1"]
  :u {:cat :verb
      :infl :past-simple}}
 
 ;; walk/walked
 {:g [#"^(.*)$" "$1ed"]
  :p [#"^(.*)ed$" "$1"]
  :u {:cat :verb
      :infl :past-simple}}

 ;; inflection: past-participle
 ;; bake/baked
 {:g [#"^(.*)e$" "$1ed"]
  :p [#"^(.*e)d$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}

 ;; try/tried (but not play/played)
 {:g [#"^(.*[^aeiou])y$" "$1ied"]
  :p [#"^(.*[^aeiou])ied$" "$1y"]
  :u {:cat :verb
      :infl :past-participle}}

  ;; explain/explained
 {:g [#"^(.*ain)$"   "$1ed"]
  :p [#"^(.*ain)ed$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}

 ;; abandon/abandoned
 {:g [#"^(.*[o])([n])$"  "$1$2ed"]
  :p [#"^(.*[o][n])ed$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}

 ;; prohibit/prohibited
 {:g [#"^(.*it)$"   "$1ed"]
  :p [#"^(.*it)ed$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}

 ;; develop/developed
 {:g [#"^(.*op)$"   "$1ed"]
  :p [#"^(.*op)ed$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}
 
  ;; stop/stopped,step/stepped
 ;; (but not: probit/prohibited)
 {:g [#"^(.*[eiou])([gnpst])$"          "$1$2$2ed"]
  :p [#"^(.*[eiou][gnpst])([gnpst])ed$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}

 ;; walk/walked
 {:g [#"^(.*)$" "$1ed"]
  :p [#"^(.*)ed$" "$1"]
  :u {:cat :verb
      :infl :past-participle}}
 
 ;; base inflection: used as a complement for auxiliaries like "will" and "would".
 ;; e.g. "will sleep"
 {:g [#"^(.*)$"  "$1"] 
  :p [#"^(.*)$"  "$1"] 
  :u {:cat :verb
      :infl :base}}

 ;; tie/tying
 {:g [#"^(.*)ie$"   "$1ying"]
  :p [#"^(.*)ying$" "$1ie"]
  :u {:cat :verb
      :infl :present-participle}}

 ;; abandon/abandoning
 {:g [#"^(.*[o])([n])$"  "$1$2ing"]
  :p [#"^(.*[o][n])ing$" "$1"]
  :u {:cat :verb
      :infl :present-participle}}

 ;; develop/developing
 {:g [#"^(.*op)$"    "$1ing"]
  :p [#"^(.*op)ing$" "$1"]
  :u {:cat :verb
      :infl :present-participle}}

 ;; stop/stopping,put/putting,run/running,let/letting
 {:g [#"^(.*[eiou])([gnpst])$"          "$1$2$2ing"]
  :p [#"^(.*[eiou][gnpst])([gnpst])ing$" "$1"]
  :u {:cat :verb
      :infl :present-participle}}
 
 ;; smoke/smoking
 ;; the double-dots prevent 'e'-removal for "be" or "see"
 ;;    be->being, not bing; see -> seeing, not seing
 {:g [#"^(..*[^e])e$" "$1ing"]
  :p [#"^(..*)ing$"   "$1e"]
  :u {:cat :verb
      :infl :present-participle}}

 ;; walk/walking
 {:g [#"^(.*)$"    "$1ing"]
  :p [#"^(.*)ing$" "$1"]
  :u {:cat :verb
      :infl :present-participle}}

 ;; smoke/smoking
 {:g [#"^(.*)e$"    "$1ing"]
  :p [#"^(.*)ing$"  "$1e"]
  :u {:cat :verb
      :infl :present-participle}}]

 
