[
 ;; see menard.test.nederlands/parsing-tests for examples.

 ;; TODO: unify both of these 'conj-outer' rules using perhaps a ug/ rule
 ;; or the subcat properties of the conjunction.
 ;; Note that for both conj-outer rules, [:cat] = [:head :cat] = [:comp :cat].
 {:rule "conj-outer" ;; [.vier +[+en .twintig]]
  :unify [menard.subcat/a
          menard.ug/comp-cat
          menard.ug/head-agr
          menard.ug/head-cat
          menard.ug/head-last
          menard.ug/head-sem]
  :cat :adjective
  :head {:phrasal? true
         :rule "conj-inner"}
  :comp {:conjunction? false}}

 ;; [conj-outer .[+niet .Ina] +[conj-inner +maar .zichzelf]]
 {:rule "conj-outer"
  :unify [menard.subcat/a
          menard.ug/comp-cat
          menard.ug/head-agr
          menard.ug/head-cat
          menard.ug/head-last
          menard.ug/head-reflexive
          menard.ug/head-rule
          menard.ug/head-sem]
  :cat :noun
  ;; TODO: depends on the conjunction:
  ;; e.g. "ik en jij"       is {:agr :plur}
  ;; but  "ik maar niet jij" is {:agr :sing}
  :agr {:number :plur}
  :is-conj? true
  :head {:phrasal? true
         :rule "conj-inner"}
  :comp {:conjunction? false}}

 {:rule "conj-inner" ;; [+en .twintig], [+maar .zichzelf]
  :unify [menard.subcat/c
          menard.ug/comp-cat
          menard.ug/head-agr
          menard.ug/head-first
          menard.ug/head-reflexive
          menard.ug/head-sense
          menard.ug/head-sem]
  :head {:cat :conjunction
         :phrasal? false}

  ;; prevent nesting:
  :is-conj? true
  :is-conj-inner? true
  :comp {:is-conj-inner? false}}

 {:rule "intensifier-bar" ;; [.echt +kleine]
  :cat :adjective
  :head {:cat :adjective
         :sem {:number? false}}
  :comp {:cat :intensifier}
  :unify [menard.nesting/cons-only
          menard.subcat/b
          menard.ug/head-agr
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/shared-def]}

 {:rule "intensifier-phrase"
  :cat :adjective
  :head {:cat :adjective
         :sem {:number? false}}
  :comp {:cat :intensifier}
  :unify [menard.nesting/adjective
          menard.nesting/rest-of-mods-unnested
          menard.subcat/b
          menard.ug/head-agr
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/shared-def]}

 ;; [nbar .vier +[nbar .kleine +tafels]]
 {:rule "nbar"
  :cat :noun
  :head {:pronoun? false
         :propernoun? false
         :subcat {:1 {:top :top}
                  :2 []}}
  :subcat {:1 :top :2 []}
  :comp {:cat :adjective
         :modifies-noun? true}
  :options [;; vier kleine (but: *kleine vier)
            {:head {:null? false}
             :mod {:first {:number? true}
                   :rest {:first {:number? false}}}}
            ;; kleine blauwe
            {:head {:null? false}
             :mod {:first {:number? false}
                   :rest {:first {:number? false}}}}
            ;; kleine
            {:mod {:first {:number? false}
                   :rest []}}
            ;; vier
            {:mod {:first {:number? true}
                   :rest []}}]
  :unify [menard.nesting/cons-only
          menard.nesting/noun
          menard.subcat/b
          menard.ug/adjunct-modifies-head
          menard.ug/head-last
          menard.ug/head-is-root
          menard.ug/head-sense
          menard.ug/nominal-phrase
          menard.ug/shared-agr
          menard.ug/shared-def]}

 {:rule "nbar:2"
  :cat :noun
  :comp {:cat :prep
         :phrasal? true ;; prevent '[nbar:2 +aanwezigheid .van]': should be instead '[nbar:2 +aanzezigheid .[pp van honden]]'
         :subcat []}
  :unify [menard.subcat/c
          menard.ug/head-cat
          menard.ug/head-first
          menard.ug/head-sem]}

 {:rule "negp"
  :unify [menard.ug/head-first
          menard.ug/head-sem
          menard.ug/comp-cat
          menard.ug/comp-reflexive
          menard.subcat/a]
  :sem {:polarity :minus}
  :head {:cat :neg}}

 ;; np with no determiner, e.g.:
 ;; 'grote katten' in 'grote katten slapen'.
 {:rule "np:1"
  :cat :noun
  :subcat []
  :head {:pronoun? false
         :propernoun? false

         ;; this ::unspec is to prevent
         ;; [np:1 grote [katten en honden]].
         ;; instead we have
         ;; [np:4 grote [katten en honden]].
         ;; below.
         :sem {:args ::unspec}

         :subcat []}
  :definite? false
  :comp {:cat :adjective
         :modifies-noun? true}
  :agr {:number :plur}
  :unify [menard.nesting/rest-of-mods-unnested
          menard.nesting/noun
          menard.subcat/b
          menard.ug/adjunct-modifies-head
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/head-rule
          menard.ug/nominal-phrase
          menard.ug/shared-agr
          menard.ug/shared-def]}

 {:rule "np:2" ;; '.de +kat', '.de +katten'
  :reflexive? false
  :cat :noun
  :subcat []
  :head {:is-conj? false}
  :options [{:agr {:number :sing}}
            {:agr {:number :plur}}]
  :unify [menard.nesting/nest-only
          menard.nesting/noun
          menard.subcat/a
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/head-rule
          menard.ug/shared-def
          menard.ug/shared-number]}

 {:rule "np:3" ;; '.grote +[nbar .grote +honden]', 'grote grote grote honden', etc.
  :cat :noun
  :subcat []
  :head {:phrasal? true
         :pronoun? false
         :is-conj? false
         :propernoun? false}
  :comp {:cat :adjective
         :modifies-noun? true}
  :agr {:number :plur}
  :unify [menard.nesting/rest-of-mods-unnested
          menard.nesting/noun
          menard.subcat/a-empty-subcat
          menard.ug/adjunct-modifies-head
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/head-rule
          menard.ug/nominal-phrase
          menard.ug/shared-agr
          menard.ug/shared-def]}

 ;; [np:4 .grote
 ;;       +[conj-outer .katten
 ;;                    +[conj-inner +en .honden]]]
 {:rule "np:4"
  :cat :noun
  :subcat []
  :head {:pronoun? false
         :propernoun? false

         ;; this
         ;;  {:top :top}
         ;; is to prevent:
         ;;  [np:4 grote [nbar grote honden]]
         ;; instead we have:
         ;;  [np:1 grote [nbar grote honden]]
         ;; above for that.
         :sem {:top :top}

         ;; this
         ;;  {:phrasal? true}
         ;; is to prevent:
         ;;  [np:4 grote honden]
         ;; instead we have:
         ;;  [np:1 grote honden]
         ;; above for that.
         :phrasal? true

         :subcat []}
  :comp {:cat :adjective
         :modifies-noun? true}
  :agr {:number :plur}
  :unify [menard.nesting/comp-modifies
          menard.subcat/b
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/mod-args
          menard.ug/nominal-phrase
          menard.ug/shared-agr
          menard.ug/shared-def]}

 {:rule "s"
  :cat :verb
  :subcat []
  :comp {:beginning-of-sentence? true}
  :options menard.nederlands.tenses/finite-tenses
  :unify [menard.subcat/a
          menard.ug/head-aux
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/sem-mod-is-empty ;; temporary until I figure out how to use [:head :sem :mod] for this rule.
          ]}

 {:rule "s-interrog"
  :cat :verb
  :subcat []
  :sem {:mood :interog}
  :options menard.nederlands.tenses/finite-tenses
  :unify [menard.subcat/a
          menard.ug/head-aux
          menard.ug/head-is-root
          menard.ug/head-first
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/sem-mod-is-empty ;; temporary until I figure out how to use [:head :sem :mod] for this rule.
          ]}
 
 {:rule "vp" ;; [vp +zie .het]
  :cat :verb
  :options menard.nederlands.tenses/finite-plus-inf-tense
  :comp {:beginning-of-sentence? false}
  :head {:aux? false
         :modal false}

  :unify [menard.subcat/c
          menard.ug/head-first
          menard.ug/head-is-root
          menard.ug/head-reflexive
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/sem-mod-is-empty ;; temporary until I figure out how to use [:head :sem :mod] for this rule.
          menard.ug/slash-is-head-slash]}

 {:rule "vp-modal-np" ;; [vp-modal-np +proberen .[vp-np .honden [vp-te +te .zien]]]
  :cat :verb
  :options menard.nederlands.tenses/finite-plus-inf-tense
  :head {:aux? false
         :modal :te}
  :comp {:rule "vp-np"}
  :unify [menard.subcat/c
          menard.ug/head-first
          menard.ug/head-infl
          menard.ug/head-is-root
          menard.ug/head-reflexive
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/sem-mod-is-empty
          menard.ug/slash-is-head-slash]}

 {:rule "vp-modal-te" ;; [vp-modal-te +proberen .[+te slapen]]
  :cat :verb
  :options menard.nederlands.tenses/finite-plus-inf-tense
  :head {:aux? false
         :modal :te}
  :comp {:rule "vp-te"}
  :unify [menard.subcat/c
          menard.ug/head-first
          menard.ug/head-infl
          menard.ug/head-is-root
          menard.ug/head-reflexive
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/sem-mod-is-empty
          menard.ug/slash-is-head-slash]}
 
 ;; the object of the non-modal verb (in the complement)
 ;; is copied up:
 {:rule "vp-modal-infinitive" ;; [vp +moet .bestrijden]
  :cat :verb
  :options menard.nederlands.tenses/finite-plus-inf-tense
  :head {:aux? false
         :phrasal? false
         :modal :infinitive}
  :unify [menard.subcat/i
          menard.ug/head-first
          menard.ug/head-is-root
          menard.ug/head-modal
          menard.ug/head-reflexive
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/nest-comp-mod
          menard.ug/slash-is-head-slash]}

 {:rule "vp-ditransitive"
  :cat :verb
  :head {:phrasal? false}
  :unify [menard.subcat/f
          menard.ug/head-first
          menard.ug/head-modal
          menard.ug/head-rule
          menard.ug/head-sem]}

 {:rule "adverb-nodig" ;; [s .jij +[adverb-nodig .[vp +hebt .[wat. +geld]] +nodig]]
  :modal false
  :cat :verb
  :sem {:subj {:existential? false}
        :obj {:top :top}} ;; prevent e.g. 'er heeft wat geld nodig'
  :head {:canonical "nodig"
         :phrasal? false}
  :comp {:phrasal? true}
  :unify [menard.subcat/d
          menard.ug/head-infl
          menard.ug/head-last
          menard.ug/head-reflexive          
          menard.ug/head-sem]}

 {:rule "vp-np" ;; [vp-np .[np de kat] +[vp-te +te .zien]]
  :cat :verb
  :options menard.nederlands.tenses/inf-tense
  :head {:aux? false
         :rule "vp-te"
         :phrasal? true}
  :unify [menard.subcat/c
          menard.ug/head-last
          menard.ug/head-is-root
          menard.ug/head-reflexive
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/sem-mod-is-empty ;; temporary until I figure out how to use [:head :sem :mod] for this rule.
          menard.ug/slash-is-head-slash]}

 {:rule "vp-te" ;; '+te .slapen'
  :cat :verb
  :infl :te
  ;; TODO: should not need {:phrasal? false}
  ;; since that can be inferred from the {"canonical" ".."}:
  :head {:canonical "te"
         :phrasal? false}
  :comp {:infl :infinitive}
  :unify [menard.subcat/d
          menard.ug/head-first
          menard.ug/comp-is-root
          menard.ug/comp-reflexive
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/slash-is-head-slash
          menard.ug/sem-mod-is-comp-mod]}

 {:rule "adverb-vp" ;; '.samen +bestrijden'
  :prod? true
  :cat :verb
  :subcat {:1 {:top :top}
           :2 {:top :top}
           :3 []}
  :reflexive? false
  :head {:cat :verb
         :infl :infinitive}
  :comp {:cat :adverb
         :phrasal? false}
  :unify [menard.subcat/b
          menard.nesting/rest-of-mods-nested
          menard.nesting/verb
          menard.ug/subj-ref
          menard.ug/head-is-root
          menard.ug/head-last
          menard.ug/head-rule]}

 ;; [modal+subject(:present-simple) +moeten .jullie]
 {:rule "modal+subject"
  :prod? true
  :cat :verb
  :reflexive? false
  :head {:phrasal? false
         :modal :infinitive
         :infl :present
         :subcat {:2 {:modal false}}}
  :options menard.nederlands.tenses/finite-tenses  
  :unify [menard.subcat/e
          menard.ug/head-first
          menard.ug/head-modal
          menard.ug/head-rule
          menard.ug/head-sem]}

 ;; +[vp-slash-object +[modal+subject(:present-simple) +moeten .we] .[adverb .samen +bestrijden]]
 {:rule "vp-slash-object"
  :prod? true
  :cat :verb
  :reflexive? false
  :head {:rule "modal+subject"
         :phrasal? true}
  :unify [menard.subcat/h
          menard.ug/head-first
          menard.ug/head-modal
          menard.ug/head-sem]}

 ;; e.g. [pp .het +op], but we'll also want another "pp" for [pp +op .het]
 ;; opposite word order)
 {:rule "pp:1"
  :cat :prep
  :unify [menard.subcat/a
          menard.ug/head-is-root
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/head-last]}

 {:rule "pp:2"
  :cat :prep
  :unify [menard.subcat/a
          menard.ug/head-is-root
          menard.ug/head-rule
          menard.ug/head-sem
          menard.ug/head-first]}
 ]
