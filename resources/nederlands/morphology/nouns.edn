[{:g [#"^(.*)$"       "$1"]
  :p [#"^(.*)$"       "$1"]
  :u {:cat :noun
      :inflection :null
      :null? true}}
 {:g [#"^(.*)$"       "$1"]          ;; no change in inflection for singular form.
  :p [#"^(.*)$"       "$1"]          ;; no change in inflection for singular form.
  :u {:cat :noun
      :null? false
      :pronoun? false
      :regular true
      :agr {:number :sing}}}

 ;; if a singular noun ends in a vowel (except 'e' but including 'y'), then noun pluralization ends in -'s (apostrophe + s).
 ;; for parsing, we include both: ' and ’ as apostrophe-variants
 {:g [#"([aiouy])$"      "$1's"]       ;; baby  -> baby's
  :p [#"([aiouy])['’]s$" "$1"]        ;; baby's -> baby
  :u {:cat :noun
      :null? false
      :inflection :apostrophe-s
      :pronoun? false
      :agr {:number :plur}
      :regular true}}
 
 ;; if a singular noun ends in -heid, then noun pluralization ends in -heden:
 {:g [#"heid$"  "heden"]           ;; mogelijkheid -> mogelijkheden
  :p [#"heden$" "heid"]
  :u {:cat :noun
      :null? false
      :inflection :heid
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; if a singular noun ends in -ooX, then noun pluralization ends in -oXen:
 ;; echtgenoot -> echtgenoten, bloemkool -> bloemkolen, boom -> bomen
 {:g [#"oo([lmnt])$"  "o$1en"]
  :p [#"o([lmnt])en$" "oo$1"]
  :u {:cat :noun
      :null? false
      :inflection :oot
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

  ;; noun pluralization ending in -s:
 {:g [#"([^aeiouy])(e|el|em|en|er|ie)$"  "$1$2s" ]
  :p [#"([^aeiouy])(e|el|em|en|er|ie)s$" "$1$2"  ]
  ;;                                    tafels -> tafel 
  :u {:cat :noun
      :null? false
      :inflection :s
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; this is a complicated pattern where, in pluralization, the
 ;; vowel shortens (aa->a) and the consonant lengthens (k->kk):
 ;; For now, only matching 'a' for the vowel and 'k' for the consonant,
 ;; but may generalize later if needed.
 {:g [#"^(.*)([a])\2([k])$"   "$1$2$3$3en"]    ;; zaak    -> zakken
  :p [#"^(.*)([a])([k])\3en$" "$1$2$2$3"]      ;; zakken  -> zaak
  :u {:cat :noun
      :null? false
      :inflection :repeat-consonant-shorten-vowel
      :pronoun? false
      :agr {:number :plur}
      :regular true}}
 
 ;; TODO: nouns end in 's' if they end in
 ;; "aar(d), -erd,-ier when referring to people" (F. p 55).
 {:g [#"^(.*)aa(.)$"     "$1a$2en"]  ;; haar   -> haren
  :p [#"^(.*)a(.)en$"    "$1aa$2"]   ;; haren -> haar
  :u {:cat :noun
      :null? false
      :inflection :repeated-vowel
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 {:g [#"^(.*)ee(.)$"     "$1e$2en"]  ;; been   -> benen
  :p [#"^(.*)e([nr])en$" "$1ee$2"]   ;; benen -> been
  :u {:cat :noun
      :null? false
      :inflection :repeated-vowel
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; TODO: see what other consonants to add besides 'g' and 'p':
 {:g [#"^(.*)oo([gp])$"  "$1o$2en"]  ;; oog -> ogen
  :p [#"^(.*)o([gp])en$" "$1oo$2"]    ;; ogen -> oog
  :u {:cat :noun
      :null? false
      :inflection :repeated-vowel
      :pronoun? false
      :agr {:number :plur}
      :regular true}}
 
 {:g [#"^(.*ui)s$"    "$1zen"]       ;; huis   -> huizen
  :p [#"^(.*ui)zen$"  "$1s"] 
  :u {:cat :noun
      :null? false
      :inflection :s2z
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 {:g [#"^(.*ts)$"       "$1en"]      ;; fiets    -> fietsen
  :p [#"^(.*ts)en$"     "$1"]
  :u {:cat :noun
      :null? false
      :inflection :tsen
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; <bril,jas,kat,boodschap,man -> brillen, jassen,katten,boodschappen,mannen>
 ;; but         : tonijn        -> tonijnen, not *tonijnnen.
 {:g [#"^(.*[^aeiou][aeiou])(n)$"    "$1$2$2en"] 
  :p [#"^(.*[^aeiou][aeiou])(n)nen$" "$1$2"] 
  :u {:cat :noun
      :null? false
      :inflection :repeated-consonant
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; bril -> brillen


 ;; plek,gesprek -> plekken,gesprekken
 {:g [#"([lr])([e])k$"        "$1$2kken"]
  :p [#"(.*)([lr])([e])kken$" "$1$2$3k"]
  :u {:cat :noun
      :null? false
      :inflection :repeated-k
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; boodschap->boodschappen,
 ;; but exclude groep->groepen, not *groeppen:
 ;; TODO: generalize not with (.*a) but with
 ;; (consonant)(vowel) as we do with repeated 't'
 ;; in the next rule:
 {:g [#"^(.*a)(p)$"    "$1$2$2en"] 
  :p [#"^(.*a)(p)pen$" "$1$2"] 
  :u {:cat :noun
      :null? false
      :inflection ::repeated-consonant
      :pronoun? false
      :agr {:number :plur}
      :regular true}}
 {:g [#"^(.*)(s)$"    "$1$2$2en"] 
  :p [#"^(.*)(s)sen$" "$1$2"] 
  :u {:cat :noun
      :null? false
      :inflection :repeated-consonant
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; bril -> brillen
 {;;      consonant  vowel   l    ->  double-l
  :g [#"^(.*[^aeiou][aieou])(l)$"    "$1$2$2en"]
  ;;      consonant  vowel   tt   ->  single-t
  :p [#"^(.*[^aeiou][aeiou])(l)len$" "$1$2"] 
  :u {:cat :noun
      :null? false
      :inflection :repeated-consonant
      :pronoun? false
      :agr {:number :plur}
      :regular true}}
 
 ;; kat -> katten
 ;; but exclude:
 ;; universiteit   -> *universiteitten
 ;;  (universiteit   -> universiteiten)
 {;;      consonant  vowel   t   ->   double-t
  :g [#"^(.*[^aeiou][aieou])(t)$"    "$1$2$2en"] 
  
  ;;      consonant  vowel   tt   ->  single-t
  :p [#"^(.*[^aeiou][aeiou])(t)ten$" "$1$2"] 
  :u {:cat :noun
      :null? false
      :inflection :repeated-consonant
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 ;; </jas,kat,boodschap,man -> jassen,katten,boodschappen,mannen>

 {:g [#"^(.*)f$"    "$1ven"]         ;; druif   -> druiven
  :p [#"^(.*)ven$"  "$1f"] 
  :u {:cat :noun
      :null? false
      :inflection :f2v
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 {:g [#"^(.*)t$"    "$1ten"]         ;; opdracht    -> opdrachten
  :p [#"^(.*)ten$"  "$1t"]
  :u {:cat :noun
      :null? false
      :inflection :ends-in-t
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 {:g [#"^(.*ee)$"    "$1ën"]    ;; zee    -> zeeën
  :p [#"^(.*)ën$"    "$1"]      ;; zeeën  -> zee
  :u {:cat :noun
      :null? false
      :inflection :umlaut-e
      :pronoun? false
      :agr {:number :plur}
      :regular true}}

 {:g [#"^(.*[^st])$"    "$1en"]      ;; hond   -> honden
 :p [#"^(.*[^st])en$"  "$1"]        ;; honden -> dog
 :u {:cat :noun
     :null? false
     :inflection :en
     :pronoun? false
     :agr {:number :plur}
     :regular true}}]

